# Generated by Django 2.0.1 on 2018-03-05 16:06

import custom.utils
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('type_name', models.CharField(choices=[('vehicle', 'Vehicle'), ('staff', 'Staff')], max_length=16, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Group',
                'ordering': ['type_name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DLI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driving_license_no', models.CharField(max_length=32, unique=True, verbose_name='Driving License No.')),
                ('driver_code', models.CharField(max_length=16)),
                ('date_of_issue', models.DateField()),
                ('date_of_expiry', models.DateField()),
            ],
            options={
                'verbose_name': 'Driver License Infomation',
                'verbose_name_plural': 'Driver License Info',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='PPI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport_no', models.CharField(max_length=32, unique=True, verbose_name='Passport No.')),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('gender', models.IntegerField(choices=[(1, 'Male'), (1, 'Female')])),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('date_of_birth', models.DateField()),
                ('date_of_issue', models.DateField()),
                ('date_of_expiry', models.DateField()),
            ],
            options={
                'verbose_name': 'Passport Infomation',
                'verbose_name_plural': 'Passport Info',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verifycode', models.CharField(default=custom.utils.Tools.get_code, help_text='for the staff registration ', max_length=4, unique=True)),
            ],
            options={
                'verbose_name': 'Setting',
                'verbose_name_plural': 'Setting',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('full_name', models.CharField(help_text='full name', max_length=64, unique=True)),
                ('phone', models.CharField(help_text='your phone', max_length=16, unique=True)),
                ('wechart_account', models.CharField(blank=True, max_length=64, null=True)),
                ('whatsup_account', models.CharField(blank=True, max_length=64, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos')),
                ('status', models.CharField(blank=True, choices=[('enabled', 'Enabled'), ('disabled', 'Disabled')], default='enabled', max_length=16, null=True)),
                ('is_driver', models.BooleanField(default=False, verbose_name='Driver ?')),
                ('is_tourguide', models.BooleanField(default=False, verbose_name='TourGuide ?')),
                ('is_operator', models.BooleanField(default=False, verbose_name='Operator ?')),
                ('is_admin', models.BooleanField(default=False, help_text='This user has permission to add or delete', verbose_name='Admin')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('group', models.ManyToManyField(blank=True, limit_choices_to={'type_name': 'staff'}, related_name='staff', to='main.BaseGroup')),
            ],
            options={
                'verbose_name': 'Staff',
                'verbose_name_plural': 'Staff',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('start_point', models.CharField(max_length=256)),
                ('end_point', models.CharField(max_length=256)),
                ('remake', models.TextField(blank=True, max_length=256)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_operator': True, 'status': 'enabled'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author_task', to='main.Staff', to_field='full_name')),
                ('driver', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_driver': True, 'status': 'enabled'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='driver_task', to='main.Staff', to_field='full_name')),
                ('operator', models.ManyToManyField(blank=True, limit_choices_to={'is_active': True, 'is_operator': True, 'status': 'enabled'}, related_name='operator_task', to='main.Staff')),
                ('tourguide', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_tourguide': True, 'status': 'enabled'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tourguide_task', to='main.Staff', to_field='full_name')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Task',
            },
        ),
        migrations.CreateModel(
            name='TLI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_no', models.CharField(max_length=64, unique=True, verbose_name='TourGuide No.')),
                ('language', models.IntegerField(choices=[(0, 'English'), (1, 'Chinese')])),
                ('date_of_expiry', models.DateField()),
                ('staff', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='TLI', to='main.Staff')),
            ],
            options={
                'verbose_name': 'TourGuide License Infomation',
                'verbose_name_plural': 'TourGuide License Info',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=64)),
                ('model_year', models.IntegerField(choices=[(2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018)], default=0)),
                ('num_of_pass', models.IntegerField(default=5)),
                ('eng_no', models.CharField(max_length=16, unique=True)),
                ('chassis_no', models.CharField(max_length=32, unique=True)),
                ('traffic_plate_no', models.CharField(max_length=16, unique=True)),
                ('exp_date', models.DateField()),
                ('reg_date', models.DateField()),
                ('ins_exp', models.DateField()),
                ('policy_no', models.CharField(max_length=32, unique=True)),
                ('rate', models.FloatField()),
                ('status', models.CharField(blank=True, choices=[('enabled', 'Enabled'), ('disabled', 'Disabled')], default='enabled', max_length=16, null=True)),
                ('photo', models.ImageField(blank=True, upload_to='photos')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('group', models.ManyToManyField(blank=True, limit_choices_to={'type_name': 'vehicle'}, related_name='vehicle', to='main.BaseGroup')),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicle',
            },
        ),
        migrations.AddField(
            model_name='task',
            name='vehicle',
            field=models.ForeignKey(blank=True, limit_choices_to={'status': 'enabled'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_task', to='main.Vehicle', to_field='traffic_plate_no'),
        ),
        migrations.AddField(
            model_name='ppi',
            name='staff',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PPI', to='main.Staff'),
        ),
        migrations.AddField(
            model_name='dli',
            name='staff',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='DLI', to='main.Staff'),
        ),
    ]
